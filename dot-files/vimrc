" Settings
syntax enable

set number
set expandtab
set tabstop=2
set shiftwidth=2
set autoindent
"set smartindent
set ruler
set ignorecase
set smartcase
set statusline=%F
set backspace=indent,eol,start
set viewoptions=cursor

call pathogen#infect()
call pathogen#helptags()
filetype plugin indent on " Don't know what this does, it was just on the pathogen website

" Set mouse available in visual mode
set mouse=v
set ttymouse=xterm2

" Colorscheme settings
set t_Co=256
colorscheme desert256

" Turn off F1 help.
nmap <F1> :echo<CR>
imap <F1> <C-o>:echo<CR>

" Pasting
map  <F2> :set paste<Return>:r !pbpaste<Return>:set nopaste<Return>
map! <F2> <Esc>:set paste<Return>:r !pbpaste<Return>:set nopaste<Return>

" Copying
map  <F3> :%!pbcopy<Return>u
map! <F3> <Esc> :%!pbcopy<Return>u

" Fast numbering
map  <F4> :set nu!<Return>
map! <F4> <C-o><F4>

" CtrlP
let g:ctrlp_working_path_mode = 0
let g:ctrlp_custom_ignore = '\v[\/](target|\.(git))$'

" Project search
nn <leader>k :LAck! -i '\b<cword>\b'<cr>

" Unimpared mappings
map ]q :cnext<cr>
map [q :cprevious<cr>
map ]Q :clast<cr>
map [Q :cfirst<cr>

" Make vim remember where it left off in a file (except for git commit
" messages)
au BufWinLeave ?*\(.git/COMMIT_EDITMSG\)\@<! silent! mkview
au BufWinEnter ?*\(.git/COMMIT_EDITMSG\)\@<! silent! loadview

" Highlight Trailing Space
highlight TrailingWhitespace ctermbg=darkgreen guibg=darkgreen
match TrailingWhitespace /\s\+$/
au TabEnter * :match TrailingWhitespace /\s\+$/

" Highlight tabs
highlight Tabs ctermbg=darkgrey guibg=darkgrey
match Tabs /\t\+/

" Reload vimrc on change
augroup myvimrc
    au!
    au BufWritePost .vimrc so $MYVIMRC
augroup END

" Trailing space removal on save
function! StripTrailingSpaces()
    let l = line(".")
    let c = col(".")
    silent! execute '%s/\s\+$//e'
    call cursor(l, c)
endfunction
au BufWritePre * :call StripTrailingSpaces()

" Recognize .md files
function! SetWrap()
  setlocal tw=79
  setlocal formatoptions=t
endfunction

au BufRead,BufNewFile *.md set filetype=markdown
au Filetype markdown call SetWrap()
au Filetype markdown set spell
" This is my pref, because it allos you to indent heredocs
" via <<-  but, alas, most people (including elastic) won't
" like it.
" au Filetype sh set noexpandtab

let g:rbpt_colorpairs = [
    \ ['brown',   'RoyalBlue3'],
    \ ['red',     'DarkOrchid3'],
    \ ['blue',    'SeaGreen3'],
    \ ['gray',    'DarkOrchid3'],
    \ ['green',   'firebrick3'],
    \ ['cyan',    'RoyalBlue3'],
    \ ['red',     'SeaGreen3'],
    \ ['magenta', 'DarkOrchid3'],
    \ ['white',   'firebrick3'],
    \ ['gray',    'RoyalBlue3'],
    \ ['magenta', 'DarkOrchid3'],
    \ ['green',   'RoyalBlue3'],
    \ ['cyan',    'SeaGreen3'],
    \ ['red',     'firebrick3'],
    \ ]

au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

" Use the old vim regex engine (version 1, as opposed to version 2, which was
" introduced in Vim 7.3.969).
set re=1

" turn off the preview buffer on omnifunc
set completeopt=menu

" If you prefer the Omni-Completion tip window to close when a selection is
" made, these lines close it on movement in insert mode or when leaving
" insert mode
"autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
"autocmd InsertLeave * if pumvisible() == 0|pclose|endif

" autoformat terraform files on save
let g:terraform_fmt_on_save = 1
